rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
             firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Helper function to check if user owns the resource
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    // Helper function to validate image file
    function isValidImage() {
      return request.resource.contentType.matches('image/.*') &&
             request.resource.size < 5 * 1024 * 1024; // 5MB limit
    }

    match /profile-images/{userId}/{allPaths=**} {
      // Users can read/write their own profile images, admins can access any
      allow read: if isOwner(userId) || isAdmin();
      allow write: if (isOwner(userId) || isAdmin()) && isValidImage();
    }
    
    // Note: Receipt images are currently processed as base64 and not stored
    // If receipt image storage is implemented in the future, add rules here
  }
} 