rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Helper function to check if user owns the document
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }



    // Helper function to check if role change is allowed
    function canChangeRole() {
      // Only admins can change roles, and they can't change their own role
      return isAdmin() && 
             request.auth.uid != resource.id &&
             request.resource.data.diff(resource.data).affectedKeys().hasOnly(['role', 'updatedAt', 'roleUpdatedBy']);
    }

    // Helper function to check if user can update their own profile
    function canUpdateOwnProfile() {
      // Users can only update specific fields on their own profile (not role)
      let allowedFields = ['displayName', 'profileImage', 'settings', 'updatedAt'];
      return isOwner(resource.id) && 
             request.resource.data.diff(resource.data).affectedKeys().hasOnly(allowedFields);
    }

    match /users/{userId} {
      // Users can read their own data, admins can read any user data
      allow read: if isOwner(userId) || isAdmin();
      
      // Users can create their own account
      allow create: if isOwner(userId);
      
      // Users can update their own profile (excluding role), admins can change roles
      allow update: if (canUpdateOwnProfile() || canChangeRole());
      
      // Only admins can delete users
      allow delete: if isAdmin();

      match /categories/{categoryId} {
        allow read, write: if isOwner(userId) || isAdmin();
      }

      match /transactions/{transactionId} {
        allow read, write: if isOwner(userId) || isAdmin();
      }

      match /subscriptions/{featureId} {
        // Users can read their own subscriptions, admins can read/write any subscriptions
        allow read: if isOwner(userId) || isAdmin();
        allow create, update: if isAdmin();
        allow delete: if isAdmin();
      }
    }


  }
}